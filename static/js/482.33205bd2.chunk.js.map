{"version":3,"file":"static/js/482.33205bd2.chunk.js","mappings":"2NAIe,SAASA,EAAT,GAA8B,IAAXC,EAAU,EAAVA,OAC9B,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBL,GACXM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAChBF,KAAKH,KACX,CAACH,KAGA,8BACKE,EAAQO,OAAS,GACd,wBACKP,EAAQQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GAC7B,OACI,2BACI,oCAAYD,MACZ,uBAAID,MAFCE,SAQrB","sources":["components/movieDetailsPage/reviews/Revievs.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchReviewById } from '../../../movieApiService/movieApiService.js';\nimport PropTypes from 'prop-types';\n\nexport default function Reviews({ idFilm }) {\n    const [reviews, setReviews] = useState([]);\n    useEffect(() => {\n        fetchReviewById(idFilm)\n            .then(rev => rev.results)\n            .then(setReviews);\n    }, [idFilm]);\n\n    return (\n        <>\n            {reviews.length > 0 ? (\n                <ul>\n                    {reviews.map(({ content, author, id }) => {\n                        return (\n                            <li key={id}>\n                                <p>Author: {author}</p>\n                                <p>{content}</p>\n                            </li>\n                        );\n                    })}\n                </ul>\n            ) : (\n                <h2>We dont have any reviews for this movie</h2>\n            )}\n        </>\n    );\n}\n\n\nReviews.propTypes = {\n    idFilm: PropTypes.string.isRequired,\n};"],"names":["Reviews","idFilm","useState","reviews","setReviews","useEffect","fetchReviewById","then","rev","results","length","map","content","author","id"],"sourceRoot":""}