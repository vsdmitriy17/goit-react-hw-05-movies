{"version":3,"file":"static/js/735.eeed11f8.chunk.js","mappings":"2NACA,EAAwC,oCAAxC,EAAuG,uC,SCOxF,SAASA,EAAT,GAA2B,IAAXC,EAAU,EAAVA,OAC3B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OALAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAcL,GACTM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,KAAKH,KACX,CAACH,KAEA,8BACKE,IACG,wBACKA,EAAOO,KAAI,WAA6CC,GAAW,IAArDC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,UACxC,OACI,2BACI,gBACIC,IACIF,EAlBhB,mCAkBiDA,EAAeG,EAEpDC,IAAKL,EACLM,UAAWC,KAEf,cAAGD,UAAWC,EAAd,SAAgDP,KAChD,uCAAeE,OATVH","sources":["webpack://react-homework-template/./src/components/movieDetailsPage/cast/Cast.module.css?4c81","components/movieDetailsPage/cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item_cast__image_cast\":\"Cast_item_cast__image_cast__MRtSk\",\"item_cast__original_name\":\"Cast_item_cast__original_name__z7NKF\"};","import { useState, useEffect } from 'react';\nimport { fetchCastById } from '../../../movieApiService/movieApiService.js';\nimport iconNotFound from '../../../img/no-pictures.png';\nimport styles from './Cast.module.css';\nimport PropTypes from 'prop-types';\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport default function Cast({ idFilm }) {\n    const [actors, setActors] = useState([]);\n    useEffect(() => {\n        fetchCastById(idFilm)\n            .then(rev => rev.cast)\n            .then(setActors);\n    }, [idFilm]);\n    return (\n        <>\n            {actors && (\n                <ul>\n                    {actors.map(({ original_name, profile_path, character }, index) => {\n                        return (\n                            <li key={index}>\n                                <img\n                                    src={\n                                        profile_path ? BASE_POSTER_URL + profile_path : iconNotFound\n                                    }\n                                    alt={original_name}\n                                    className={styles.item_cast__image_cast}\n                                />\n                                <p className={styles.item_cast__original_name}>{original_name}</p>\n                                <p>Character: {character}</p>\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </>\n    );\n}\n\nCast.propTypes = {\n    idFilm: PropTypes.string.isRequired,\n};"],"names":["Cast","idFilm","useState","actors","setActors","useEffect","fetchCastById","then","rev","cast","map","index","original_name","profile_path","character","src","iconNotFound","alt","className","styles"],"sourceRoot":""}